{
    "sourceFile": "src/lib/api.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1754641844435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1754641844435,
            "name": "Commit-0",
            "content": "import { pageLoaderController } from '@/contexts/PageLoaderContext'\nimport { devLog, devWarn } from '../utils/devLogger'\n\ninterface CallApiPostParams {\n  title: string\n  url: string\n  accessToken?: string\n  body?: Record<string, any>\n  isCallPageLoader?: boolean\n}\n\nexport async function callApiPost<T = any>({\n  title,\n  url,\n  accessToken,\n  body = {},\n  isCallPageLoader = false,\n}: CallApiPostParams): Promise<T> {\n  devLog(`📱 [${title}]`, url, body)\n  if (isCallPageLoader) pageLoaderController.open()\n\n  let returnValue = ''\n\n  try {\n    const headers: Record<string, string> = {\n      'Content-Type': 'application/json',\n    }\n\n    if (accessToken) {\n      headers['Authorization'] = `Bearer ${accessToken}`\n    }\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(body),\n    })\n\n    returnValue = await response.text()\n    devLog(`📱 [${title}] 응답`, returnValue)\n  } catch (error) {\n    devLog(`❌ [${title}] API 요청 에러`, error)\n    returnValue = '[]'\n  } finally {\n    if (isCallPageLoader) pageLoaderController.close()\n  }\n\n  try {\n    return JSON.parse(returnValue)\n  } catch (e) {\n    devWarn(`⚠️ [${title}] JSON 파싱 실패`, e)\n    return [] as T\n  }\n}\n"
        }
    ]
}