{
    "sourceFile": "src/components/Chart/MyResponsiveBar.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1755170097210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1755170097210,
            "name": "Commit-0",
            "content": "import dynamic from \"next/dynamic\";\nconst ResponsiveBar = dynamic(() => import(\"@nivo/bar\").then(m => m.ResponsiveBar), { ssr: false });\n\ntype MyResponsiveBarProps = {\n  data: Array<Record<string, any>>;\n};\n\nconst MyResponsiveBar = ({ data }: MyResponsiveBarProps) => {\n  const allKeys = Object.keys(data[0]);\n  const indexBy = allKeys[0];\n  const keys = allKeys.slice(1);\n\n  const lastIndex = data.length - 1;\n\n  const coloredData: Array<Record<string, any>> = data.map((item, index) => ({\n    ...item,\n    color: index === lastIndex ? \"#214A72\" : \"#648096\",\n  }));\n\n  return (\n    <ResponsiveBar\n      data={coloredData}\n      keys={keys}\n      indexBy={indexBy}\n      margin={{ top: 20, right: 0, bottom: 20, left: 0 }}\n      padding={0.3}\n      groupMode=\"grouped\"\n      valueScale={{ type: \"linear\" }}\n      indexScale={{ type: \"band\", round: true }}\n      colors={({ indexValue }) => {\n        const item = coloredData.find((d) => d[indexBy] === indexValue);\n        return item?.color || \"#648096\";\n      }}\n      borderColor={{\n        from: \"color\",\n        modifiers: [[\"darker\", 1.6]],\n      }}\n      axisTop={null}\n      // axisRight={{\n      //   tickSize: 0,\n      //   tickPadding: 5,\n      //   tickRotation: 0,\n      // }}\n      axisBottom={{\n        tickSize: 0,\n        tickPadding: 5,\n        tickRotation: 0,\n        legendPosition: \"middle\",\n        legendOffset: 32,\n        format: (value) => {\n          if (value === \"기준일\") return \"기준일\";\n          if (value === \"7일전\") return \"7일전\";\n          return \"\"; // 나머지는 표시 안 함\n        },\n      }}\n      \n      // tooltip={({ id, value, indexValue }) => (\n      //   <div\n      //     style={{\n      //       padding: 12,\n      //       background: \"#fff\",\n      //       border: \"1px solid #ccc\",\n      //       color: \"#214A72\", // 원하는 hover 텍스트 색상\n      //     }}\n      //   >\n      //     <strong>{id}</strong>: {value} in <strong>{indexValue}</strong>\n      //   </div>\n      // )}\n      tooltip={() => null}\n      label={(d) => `${d.value}`}\n      labelPosition=\"end\"\n      labelOffset={12}\n      enableTotals={false}\n      animate={true}\n      axisLeft={null}\n      enableGridY={true}\n       \n      // enableLabel={false}\n      labelSkipWidth={12}\n      labelSkipHeight={12}\n      labelTextColor={\"#000\"}\n      legends={[]}\n      role=\"application\"\n      ariaLabel=\"Nivo bar chart\"\n      barAriaLabel={(e) => `${e.id}: ${e.formattedValue} in ${e.indexValue}`}\n    />\n  );\n};\n\nexport default MyResponsiveBar;\n"
        }
    ]
}