{
    "sourceFile": "src/components/CustomList/ResponsiveList/CmsMobileView.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1755076048582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755076094103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -339,9 +339,9 @@\n       case 'compact': return '13px';\n       default: return '14px';\n     }\n   }};\n-  color: ${AppColors.t100};\n+  color: ${AppColors.text};\n   flex: 1;\n   text-align: right;\n   word-break: break-all;\n   font-weight: ${({ $viewMode }) => $viewMode === 'large' ? '500' : 'normal'};\n"
                },
                {
                    "date": 1755076123262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,9 +221,9 @@\n const HeaderTitle = styled.h1`\n   font-size: 20px;\n   font-weight: 600;\n   margin: 0;\n-  color: ${AppColors.t100};\n+  color: ${AppColors.text};\n `;\n \n const ActionButtons = styled.div`\n   display: flex;\n"
                },
                {
                    "date": 1755076151849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -339,9 +339,9 @@\n       case 'compact': return '13px';\n       default: return '14px';\n     }\n   }};\n-  color: ${AppColors.text};\n+  color: bla\n   flex: 1;\n   text-align: right;\n   word-break: break-all;\n   font-weight: ${({ $viewMode }) => $viewMode === 'large' ? '500' : 'normal'};\n"
                },
                {
                    "date": 1755076205953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,9 +221,9 @@\n const HeaderTitle = styled.h1`\n   font-size: 20px;\n   font-weight: 600;\n   margin: 0;\n-  color: ${AppColors.text};\n+  color: black;\n `;\n \n const ActionButtons = styled.div`\n   display: flex;\n@@ -327,9 +327,9 @@\n       default: return '14px';\n     }\n   }};\n   font-weight: 500;\n-  color: ${AppColors.text};\n+  color: black;\n   min-width: 80px;\n `;\n \n const FieldValue = styled.div<{ $viewMode: ViewMode }>`\n@@ -339,9 +339,9 @@\n       case 'compact': return '13px';\n       default: return '14px';\n     }\n   }};\n-  color: bla\n+  color: black;\n   flex: 1;\n   text-align: right;\n   word-break: break-all;\n   font-weight: ${({ $viewMode }) => $viewMode === 'large' ? '500' : 'normal'};\n"
                },
                {
                    "date": 1755076424101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,8 +207,9 @@\n const MobileContainer = styled.div`\n   padding: 16px;\n   background-color: #f5f5f5;\n   min-height: 100vh;\n+  width:50px;\n `;\n \n const MobileHeader = styled.div`\n   display: flex;\n"
                },
                {
                    "date": 1755076474023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -278,8 +278,9 @@\n const CardList = styled.div`\n   display: flex;\n   flex-direction: column;\n   gap: 12px;\n+  width:400px;\n `;\n \n const DataCard = styled.div<{ $viewMode: ViewMode }>`\n   background: white;\n"
                },
                {
                    "date": 1755076525243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -376,5 +376,6 @@\n const EndMessage = styled.div`\n   text-align: center;\n   padding: 20px;\n   color: ${AppColors.t70};\n-  font-\n\\ No newline at end of file\n+  font-size: 14px;\n+`;\n"
                },
                {
                    "date": 1755077192468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -215,9 +215,8 @@\n   justify-content: space-between;\n   align-items: center;\n   margin-bottom: 20px;\n   padding: 16px 0;\n-  width:100%;\n `;\n \n const HeaderTitle = styled.h1`\n   font-size: 20px;\n@@ -376,5 +375,6 @@\n const EndMessage = styled.div`\n   text-align: center;\n   padding: 20px;\n   color: ${AppColors.t70};\n-  font-s\n\\ No newline at end of file\n+  font-size: 14px;\n+`;\n"
                }
            ],
            "date": 1755076048582,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { ColumnDefinition } from \"@/components/CustomList/GenericDataTable\";\nimport { AppColors } from \"@/styles/colors\";\nimport { \n  Add as AddIcon, \n  FileDownload as DownloadIcon,\n  ViewList as DetailViewIcon,\n  ViewModule as CompactViewIcon,\n  ViewComfy as LargeViewIcon\n} from \"@mui/icons-material\";\n\n// BaseRecord 타입 정의\ninterface BaseRecord {\n  id?: string | number;\n  index?: number;\n  no?: number;\n  createdTime?: string;\n  [key: string]: any;\n}\n\n// 카드 보기 모드 타입\ntype ViewMode = 'detail' | 'compact' | 'large';\n\ninterface CmsMobileViewProps<T extends BaseRecord> {\n  title: string;\n  data: T[];\n  columns: ColumnDefinition<T>[];\n  onRowClick?: (item: T) => void;\n  onAdd?: () => void;\n  onExport?: () => void;\n  isLoading?: boolean;\n  fetchData?: () => Promise<{ data: T[]; totalItems: number; allItems: number; }>;\n  themeMode?: \"light\" | \"dark\";\n  compactFieldCount?: number; // compact 모드에서 보여줄 필드 수\n  defaultViewMode?: ViewMode; // 기본 보기 모드\n}\n\nexport default function CmsMobileView<T extends BaseRecord>({\n  title,\n  data,\n  columns,\n  onRowClick,\n  onAdd,\n  onExport,\n  isLoading = false,\n  fetchData,\n  themeMode = \"light\",\n  compactFieldCount = 6,\n  defaultViewMode = 'detail'\n}: CmsMobileViewProps<T>) {\n  const [displayData, setDisplayData] = useState<T[]>([]);\n  const [hasMore, setHasMore] = useState(true);\n  const [page, setPage] = useState(1);\n  const [viewMode, setViewMode] = useState<ViewMode>(defaultViewMode);\n  const itemsPerPage = 20;\n\n  // 무한 스크롤용 데이터 로드\n  useEffect(() => {\n    const loadData = async () => {\n      if (fetchData) {\n        const result = await fetchData();\n        setDisplayData(result.data.slice(0, itemsPerPage));\n        setHasMore(result.data.length > itemsPerPage);\n      } else {\n        setDisplayData(data.slice(0, itemsPerPage));\n        setHasMore(data.length > itemsPerPage);\n      }\n    };\n    loadData();\n  }, [data, fetchData]);\n\n  const loadMore = () => {\n    const nextPage = page + 1;\n    const startIndex = nextPage * itemsPerPage;\n    const newData = data.slice(0, startIndex + itemsPerPage);\n    \n    setDisplayData(newData);\n    setPage(nextPage);\n    setHasMore(newData.length < data.length);\n  };\n\n  // 카드 클릭 핸들러\n  const handleCardClick = (item: T) => {\n    if (onRowClick) {\n      onRowClick(item);\n    }\n  };\n\n  // 보기 모드에 따른 컬럼 필터링\n  const getFilteredColumns = () => {\n    if (viewMode === 'detail') {\n      return columns.filter(col => !col.noPopup);\n    } else if (viewMode === 'compact') {\n      return columns.filter(col => !col.noPopup).slice(0, compactFieldCount);\n    } else { // large\n      // No, 첫번째 컬럼(보통 name이나 id), createdTime\n      const importantColumns = [];\n      \n      // No 컬럼 찾기\n      const noColumn = columns.find(col => col.accessor === 'no');\n      if (noColumn) importantColumns.push(noColumn);\n      \n      // 첫 번째 의미있는 컬럼 (No가 아닌 첫 번째)\n      const firstMeaningfulColumn = columns.find(col => \n        col.accessor !== 'no' && !col.noPopup\n      );\n      if (firstMeaningfulColumn) importantColumns.push(firstMeaningfulColumn);\n      \n      // createdTime 컬럼 찾기\n      const createdTimeColumn = columns.find(col => \n        col.accessor === 'createdTime' || col.header.includes('가입일') || col.header.includes('생성일')\n      );\n      if (createdTimeColumn) importantColumns.push(createdTimeColumn);\n      \n      return importantColumns;\n    }\n  };\n\n  return (\n    <MobileContainer>\n      {/* 헤더 영역 */}\n      <MobileHeader>\n        <HeaderTitle>{title}</HeaderTitle>\n        <ActionButtons>\n          {/* 보기 모드 버튼들 */}\n          <ViewModeButtons>\n            <ViewModeButton \n              $active={viewMode === 'detail'} \n              onClick={() => setViewMode('detail')}\n              title=\"자세히\"\n            >\n              <DetailViewIcon fontSize=\"small\" />\n            </ViewModeButton>\n            <ViewModeButton \n              $active={viewMode === 'compact'} \n              onClick={() => setViewMode('compact')}\n              title=\"작게\"\n            >\n              <CompactViewIcon fontSize=\"small\" />\n            </ViewModeButton>\n            <ViewModeButton \n              $active={viewMode === 'large'} \n              onClick={() => setViewMode('large')}\n              title=\"크게\"\n            >\n              <LargeViewIcon fontSize=\"small\" />\n            </ViewModeButton>\n          </ViewModeButtons>\n          \n          {/* 액션 버튼들 */}\n          {onAdd && (\n            <ActionButton onClick={onAdd}>\n              <AddIcon fontSize=\"small\" />\n            </ActionButton>\n          )}\n          {onExport && (\n            <ActionButton onClick={onExport}>\n              <DownloadIcon fontSize=\"small\" />\n            </ActionButton>\n          )}\n        </ActionButtons>\n      </MobileHeader>\n\n      {/* 카드 리스트 */}\n      <CardList>\n        {isLoading ? (\n          <LoadingText>데이터를 불러오는 중...</LoadingText>\n        ) : (\n          <>\n            {displayData.map((item, index) => (\n              <DataCard key={item.id || item.index || index} onClick={() => handleCardClick(item)} $viewMode={viewMode}>\n                {getFilteredColumns().map((column) => {\n                  const value = item[column.accessor];\n                  const displayValue = column.formatter ? column.formatter(value, item, index) : value;\n                  \n                  return (\n                    <CardRow key={String(column.accessor)} $viewMode={viewMode}>\n                      <FieldLabel $viewMode={viewMode}>{column.header}</FieldLabel>\n                      <FieldValue $viewMode={viewMode}>{displayValue}</FieldValue>\n                    </CardRow>\n                  );\n                })}\n              </DataCard>\n            ))}\n            \n            {/* 무한 스크롤 로드 더보기 버튼 */}\n            {hasMore && (\n              <LoadMoreButton onClick={loadMore}>\n                더보기\n              </LoadMoreButton>\n            )}\n            \n            {!hasMore && displayData.length > 0 && (\n              <EndMessage>모든 데이터를 불러왔습니다.</EndMessage>\n            )}\n          </>\n        )}\n      </CardList>\n    </MobileContainer>\n  );\n}\n\n// Styled Components\nconst MobileContainer = styled.div`\n  padding: 16px;\n  background-color: #f5f5f5;\n  min-height: 100vh;\n`;\n\nconst MobileHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  padding: 16px 0;\n`;\n\nconst HeaderTitle = styled.h1`\n  font-size: 20px;\n  font-weight: 600;\n  margin: 0;\n  color: ${AppColors.t100};\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nconst ActionButton = styled.button`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background: ${AppColors.primary};\n  border: none;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  \n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst ViewModeButtons = styled.div`\n  display: flex;\n  gap: 4px;\n  margin-right: 8px;\n  padding: 4px;\n  background: rgba(0, 0, 0, 0.05);\n  border-radius: 8px;\n`;\n\nconst ViewModeButton = styled.button<{ $active: boolean }>`\n  width: 36px;\n  height: 36px;\n  border-radius: 6px;\n  border: none;\n  background: ${({ $active }) => $active ? AppColors.primary : 'transparent'};\n  color: ${({ $active }) => $active ? 'white' : AppColors.t70};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: ${({ $active }) => $active ? AppColors.primary : 'rgba(0, 0, 0, 0.1)'};\n  }\n`;\n\nconst CardList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nconst DataCard = styled.div<{ $viewMode: ViewMode }>`\n  background: white;\n  border-radius: 12px;\n  padding: ${({ $viewMode }) => {\n    switch ($viewMode) {\n      case 'large': return '20px';\n      case 'compact': return '12px';\n      default: return '16px';\n    }\n  }};\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nconst CardRow = styled.div<{ $viewMode: ViewMode }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${({ $viewMode }) => {\n    switch ($viewMode) {\n      case 'large': return '12px 0';\n      case 'compact': return '6px 0';\n      default: return '8px 0';\n    }\n  }};\n  border-bottom: 1px solid #f0f0f0;\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst FieldLabel = styled.span<{ $viewMode: ViewMode }>`\n  font-size: ${({ $viewMode }) => {\n    switch ($viewMode) {\n      case 'large': return '16px';\n      case 'compact': return '13px';\n      default: return '14px';\n    }\n  }};\n  font-weight: 500;\n  color: ${AppColors.text};\n  min-width: 80px;\n`;\n\nconst FieldValue = styled.div<{ $viewMode: ViewMode }>`\n  font-size: ${({ $viewMode }) => {\n    switch ($viewMode) {\n      case 'large': return '16px';\n      case 'compact': return '13px';\n      default: return '14px';\n    }\n  }};\n  color: ${AppColors.t100};\n  flex: 1;\n  text-align: right;\n  word-break: break-all;\n  font-weight: ${({ $viewMode }) => $viewMode === 'large' ? '500' : 'normal'};\n`;\n\nconst LoadMoreButton = styled.button`\n  width: 100%;\n  padding: 16px;\n  background: white;\n  border: 2px solid ${AppColors.primary};\n  color: ${AppColors.primary};\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  margin-top: 16px;\n  \n  &:hover {\n    background: ${AppColors.primary};\n    color: white;\n  }\n`;\n\nconst LoadingText = styled.div`\n  text-align: center;\n  padding: 40px;\n  color: ${AppColors.t70};\n  font-size: 16px;\n`;\n\nconst EndMessage = styled.div`\n  text-align: center;\n  padding: 20px;\n  color: ${AppColors.t70};\n  font-size: 14px;\n`;\n"
        }
    ]
}