{
    "sourceFile": "src/components/ai-esti/EstimateCard.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1754635059584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754635915654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n import styled from 'styled-components';\n import { ProjectEstimate } from '../types';\n import Icon from './Icon';\n import Modal from '@/components/common/Modal';\n+import { useToast } from '@/components/common/ToastProvider'\n \n const CardWrapper = styled.div`\n   background-color: ${({ theme }) => theme.surface1};\n   color: ${({ theme }) => theme.text};\n@@ -138,8 +139,9 @@\n }\n \n const EstimateCard: React.FC<EstimateCardProps> = ({ estimate }) => {\n   const [openShare, setOpenShare] = useState(false)\n+  const { success } = useToast()\n \n   // estimated_period가 '30주'와 같은 문자열일 경우를 가정하고 숫자만 추출합니다.\n   const weekValue = parseInt(estimate.estimated_period);\n \n@@ -154,11 +156,11 @@\n \n   const handleCopy = async () => {\n     try {\n       await navigator.clipboard.writeText(shareUrl)\n-      alert('링크가 복사되었습니다.')\n+      success('링크가 복사되었습니다.')\n     } catch {\n-      // fallback\n+      // ignore\n     }\n   }\n \n   return (\n"
                },
                {
                    "date": 1754637139228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,9 +118,9 @@\n     flex: 1;\n     height: 44px;\n     border-radius: 8px;\n     border: 1px solid ${({ theme }) => theme.border};\n-    background: ${({ theme }) => theme.surface1};\n+    // background: ${({ theme }) => theme.surface1};\n     color: ${({ theme }) => theme.text};\n     padding: 0 12px;\n   }\n \n"
                },
                {
                    "date": 1754637160635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,19 +117,19 @@\n   input {\n     flex: 1;\n     height: 44px;\n     border-radius: 8px;\n-    border: 1px solid ${({ theme }) => theme.border};\n-    // background: ${({ theme }) => theme.surface1};\n-    color: ${({ theme }) => theme.text};\n+    border: 1px solid #e5e7eb;\n+    background: #f9fafb;\n+    color: #111827;\n     padding: 0 12px;\n   }\n \n   button {\n     height: 44px;\n     padding: 0 14px;\n     border-radius: 8px;\n-    background: ${({ theme }) => theme.accent};\n+    background: #2E2E48;\n     color: white;\n     font-weight: 600;\n   }\n `;\n"
                },
                {
                    "date": 1754637178849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,9 +129,12 @@\n     padding: 0 14px;\n     border-radius: 8px;\n     background: #2E2E48;\n     color: white;\n-    font-weight: 600;\n+    font-size: 16px;\n+font-style: normal;\n+font-weight: 400;\n+line-height: 160%;\n   }\n `;\n \n interface EstimateCardProps {\n"
                },
                {
                    "date": 1754637184565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,8 +133,9 @@\n     font-size: 16px;\n font-style: normal;\n font-weight: 400;\n line-height: 160%;\n+letter-spacing: 0.32px;\n   }\n `;\n \n interface EstimateCardProps {\n"
                },
                {
                    "date": 1754637195128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,9 +129,9 @@\n     padding: 0 14px;\n     border-radius: 8px;\n     background: #2E2E48;\n     color: white;\n-    font-size: 16px;\n+    font-size: 14px;\n font-style: normal;\n font-weight: 400;\n line-height: 160%;\n letter-spacing: 0.32px;\n"
                },
                {
                    "date": 1754637226899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,9 +194,9 @@\n         </ActionButtons>\n       </Header>\n \n       <Modal open={openShare} title=\"견적서 공유\" onClose={() => setOpenShare(false)} width={520}>\n-        <div style={{ color: '#A1A1AA', fontSize: 14, marginBottom: 8 }}>공유받은 사용자는 견적 내용을 확인할 수 있습니다.</div>\n+        <div style={{ color: '#A1A1AA', fontSize: 14, marginBottom: 16 }}>공유받은 사용자는 견적 내용을 확인할 수 있습니다.</div>\n         <ShareInput>\n           <input readOnly value={shareUrl} placeholder=\"https://aigocorp.com/id...\" />\n           <button onClick={handleCopy}>링크복사</button>\n         </ShareInput>\n"
                },
                {
                    "date": 1754637233178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,9 +194,9 @@\n         </ActionButtons>\n       </Header>\n \n       <Modal open={openShare} title=\"견적서 공유\" onClose={() => setOpenShare(false)} width={520}>\n-        <div style={{ color: '#A1A1AA', fontSize: 14, marginBottom: 16 }}>공유받은 사용자는 견적 내용을 확인할 수 있습니다.</div>\n+        <div style={{ color: '#A1A1AA', fontSize: 14, marginBottom: 32 }}>공유받은 사용자는 견적 내용을 확인할 수 있습니다.</div>\n         <ShareInput>\n           <input readOnly value={shareUrl} placeholder=\"https://aigocorp.com/id...\" />\n           <button onClick={handleCopy}>링크복사</button>\n         </ShareInput>\n"
                }
            ],
            "date": 1754635059584,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { ProjectEstimate } from '../types';\nimport Icon from './Icon';\nimport Modal from '@/components/common/Modal';\n\nconst CardWrapper = styled.div`\n  background-color: ${({ theme }) => theme.surface1};\n  color: ${({ theme }) => theme.text};\n  border-radius: 12px;\n  overflow: hidden;\n  margin: 24px 0;\n`;\n\nconst Header = styled.div`\n  padding: 10px 8px 0 8px;\n\n`;\n\n  const Flex = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 0 0 32px 0;\n`;\n\nconst Title = styled.h2`\n  font-size: 20px;\nfont-style: normal;\nfont-weight: 700;\nline-height: normal;\n`;\n\n\nconst Right = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst Price = styled.p`\n  font-size: 20px;\nfont-style: normal;\nfont-weight: 700;\nline-height: normal;\nletter-spacing: 0.4px;\n  margin: 0 0 8px 0;\n  \n  span {\n    font-size: 0.7em;\n    font-weight: normal;\n    color: ${({ theme }) => theme.subtleText};\n    margin-left: 8px;\n  }\n`;\n\nconst Period = styled.p`\n  font-size: 16px;\nfont-style: normal;\nfont-weight: 700;\nline-height: normal;\nletter-spacing: 0.32px;\n  color: ${({ theme }) => theme.text};\n  margin: 0 0 24px 0;\n\n  .p {\n  font-size: 12px;\nfont-style: normal;\nfont-weight: 400;\nline-height: normal;\nletter-spacing: 0.24px;\ncolor: ${({ theme }) => theme.subtleText};\n}\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: 10px;\n  padding-top: 4px;\n  border-top: 1px solid ${({ theme }) => theme.border};\n  margin: 4px;\n`;\n\nconst Line = styled.div`\n  border-left: 1px solid ${({ theme }) => theme.border};\n  `;\n\nconst ActionButton = styled.button<{ primary?: boolean }>`\n  flex: 1;\n  padding: 12px;\n  border-radius: 8px;\n  border: none;\n  background-color: ${({ theme, primary }) => (primary ? theme.accent : 'transparent')};\n  color: ${({ theme, primary }) => (primary ? (theme.body) : theme.accent)};\n  font-family: Roboto;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 160%; \n  letter-spacing: 0.28px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst ShareInput = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-top: 8px;\n\n  input {\n    flex: 1;\n    height: 44px;\n    border-radius: 8px;\n    border: 1px solid ${({ theme }) => theme.border};\n    background: ${({ theme }) => theme.surface1};\n    color: ${({ theme }) => theme.text};\n    padding: 0 12px;\n  }\n\n  button {\n    height: 44px;\n    padding: 0 14px;\n    border-radius: 8px;\n    background: ${({ theme }) => theme.accent};\n    color: white;\n    font-weight: 600;\n  }\n`;\n\ninterface EstimateCardProps {\n  estimate: ProjectEstimate;\n}\n\nconst EstimateCard: React.FC<EstimateCardProps> = ({ estimate }) => {\n  const [openShare, setOpenShare] = useState(false)\n\n  // estimated_period가 '30주'와 같은 문자열일 경우를 가정하고 숫자만 추출합니다.\n  const weekValue = parseInt(estimate.estimated_period);\n\n  // 1개월의 평균 주 수 (30.41일 / 7일)를 사용하여 개월 수를 계산하고 올림 처리합니다.\n  const weeksPerMonth = 4.345;\n  const monthValue = Math.ceil(weekValue / weeksPerMonth);\n\n  // 최종적으로 보여줄 기간 문자열을 생성합니다.\n  const displayPeriod = `(약 ${monthValue}개월)`;\n\n  const shareUrl = typeof window !== 'undefined' ? window.location.href + `?estimate=${encodeURIComponent(estimate.project_name)}` : ''\n\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(shareUrl)\n      alert('링크가 복사되었습니다.')\n    } catch {\n      // fallback\n    }\n  }\n\n  return (\n    <CardWrapper>\n      <Header>\n        <Flex>\n        <Title>{estimate.project_name}</Title>\n        <Right>\n        <span><Icon onClick={() => setOpenShare(true)} src={'/ai-estimate/share2_dark.png'} width={36} height={36} /></span>\n        <span><Icon src={'/ai-estimate/download_dark.png'} width={36} height={36} /></span>\n        </Right>\n\n        </Flex>\n        <Price>\n          KRW {estimate.total_price}\n          <span>(부가세 별도)</span>\n        </Price>\n        {/* 계산된 displayPeriod를 Period 컴포넌트에 적용 */}\n        <Period>\n          <span style={{marginRight: '4px'}}>{estimate.estimated_period}</span>\n          <span className=\"p\">{displayPeriod}</span>\n        </Period>\n        <ActionButtons>\n          <ActionButton>AI 예산 줄이기</ActionButton>\n          <Line></Line>\n          <ActionButton>AI 맞춤 추천</ActionButton>\n        </ActionButtons>\n      </Header>\n\n      <Modal open={openShare} title=\"견적서 공유\" onClose={() => setOpenShare(false)} width={520}>\n        <div style={{ color: '#A1A1AA', fontSize: 14, marginBottom: 8 }}>공유받은 사용자는 견적 내용을 확인할 수 있습니다.</div>\n        <ShareInput>\n          <input readOnly value={shareUrl} placeholder=\"https://aigocorp.com/id...\" />\n          <button onClick={handleCopy}>링크복사</button>\n        </ShareInput>\n      </Modal>\n    </CardWrapper>\n  );\n};\n\nexport default EstimateCard;\n"
        }
    ]
}