{
    "sourceFile": "src/contexts/PageLoaderContext.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1754641844435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1754641844435,
            "name": "Commit-0",
            "content": "'use client'\n\nimport React, { createContext, useContext, useRef, useState } from 'react'\nimport styled from 'styled-components'\n\nconst Overlay = styled.div`\n  position: fixed;\n  inset: 0;\n  background: rgba(0,0,0,0.3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 10000;\n  color: #fff;\n  font-weight: 600;\n`\n\ninterface PageLoaderContextValue {\n  open: () => void\n  close: () => void\n}\n\nconst Ctx = createContext<PageLoaderContextValue | null>(null)\n\nexport const pageLoaderController = {\n  open: () => {},\n  close: () => {},\n}\n\nexport function PageLoaderProvider({ children }: { children: React.ReactNode }) {\n  const [visible, setVisible] = useState(false)\n\n  const open = () => setVisible(true)\n  const close = () => setVisible(false)\n\n  // controller에 연결\n  pageLoaderController.open = open\n  pageLoaderController.close = close\n\n  return (\n    <Ctx.Provider value={{ open, close }}>\n      {children}\n      {visible && <Overlay>Loading...</Overlay>}\n    </Ctx.Provider>\n  )\n}\n\nexport function usePageLoader() {\n  const ctx = useContext(Ctx)\n  if (!ctx) throw new Error('usePageLoader must be used within PageLoaderProvider')\n  return ctx\n}\n"
        }
    ]
}