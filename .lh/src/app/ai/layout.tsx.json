{
    "sourceFile": "src/app/ai/layout.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1755244296426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755244422878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,49 +1,131 @@\n-'use client'\n+\"use client\";\n \n-import React from 'react'\n-import styled from 'styled-components'\n-import Link from 'next/link'\n-import { usePathname } from 'next/navigation'\n+import React, { ReactNode } from 'react';\n+import styled from 'styled-components';\n+import Icon from '@/components/ai-esti/Icon';\n+import { useRouter } from 'next/navigation';\n+import { useThemeStore } from '@/store/themeStore';\n+import BottomInput from '@/components/ai-esti/BottomInput';\n \n-const Container = styled.div`\n+const LayoutWrapper = styled.div`\n   min-height: 100vh;\n-  padding: 16px;\n-  background: ${({ theme }) => theme.body};\n+  padding-bottom: calc(76px + env(safe-area-inset-bottom));\n+  background-color: ${({ theme }) => theme.body};\n `;\n \n-const Tabs = styled.nav`\n+const TopNav = styled.nav`\n+  position: fixed;\n+  top: 0;\n+  left: 0;\n+  right: 0;\n+  height: 80px;\n   display: flex;\n-  gap: 12px;\n+  justify-content: space-between;\n   align-items: center;\n-  padding: 8px 16px;\n+  padding: 12px 16px;\n+  background-color: ${({ theme }) => theme.body};\n+  border-bottom: 1px solid ${({ theme }) => theme.border};\n+  z-index: 100;\n+\n+  .left-icons, .right-icons {\n+    display: flex;\n+    align-items: center;\n+    gap: 8px;\n+  }\n+\n+  .icon {\n+    display: flex;\n+    align-items: center;\n+    justify-content: center;\n+    cursor: pointer;\n+    padding: 0;\n+    border-radius: 8px;\n+\n+    &:hover {\n+      background-color: ${({ theme }) => `${theme.body}`};\n+    }\n+  }\n+`;\n+\n+const ThemeToggleButton = styled.button`\n+  position: fixed;\n+  bottom: 120px;\n+  right: 20px;\n+  padding: 10px 15px;\n+  border-radius: 20px;\n   border: 1px solid ${({ theme }) => theme.border};\n-  background: ${({ theme }) => theme.surface1};\n-  border-radius: 8px;\n-  margin: 8px auto 12px;\n-  max-width: 960px;\n-`\n+  background-color: ${({ theme }) => theme.surface1};\n+  color: ${({ theme }) => theme.text};\n+  cursor: pointer;\n+  font-weight: bold;\n+  z-index: 1000;\n+  \n+  &:hover {\n+    opacity: 0.8;\n+  }\n+`;\n \n-const Tab = styled(Link)<{ $active?: boolean }>`\n-  padding: 8px 12px;\n-  border-radius: 6px;\n-  color: ${({ theme, $active }) => ($active ? theme.body : theme.text)};\n-  background: ${({ theme, $active }) => ($active ? theme.accent : 'transparent')};\n-  font-weight: 600;\n-  text-decoration: none;\n-`\n+interface AiEstimateLayoutProps {\n+  children: ReactNode;\n+  inputPlaceholder?: string;\n+  onInputSubmit?: (value: string) => void;\n+}\n \n-export default function AiLayout({ children }: { children: React.ReactNode }) {\n-  const pathname = usePathname()\n-  const base = '/ai'\n-  \n+interface ChildWithThemeProps {\n+  toggleTheme?: () => void;\n+  themeMode?: 'light' | 'dark';\n+}\n+\n+export default function AiEstimateLayout({ children, inputPlaceholder, onInputSubmit }: AiEstimateLayoutProps) {\n+  const router = useRouter();\n+  const { isDarkMode, toggleTheme } = useThemeStore();\n+\n+  const isLightTheme = !isDarkMode;\n+  const icons = {\n+    back: '/ai-estimate/arrow_back.png',\n+    share: isLightTheme ? '/ai-estimate/share.png' : '/ai-estimate/share_dark.png',\n+    new: isLightTheme ? '/ai-estimate/new.png' : '/ai-estimate/new_dark.png',\n+    estimate: isLightTheme ? '/ai-estimate/esti.png' : '/ai-estimate/esti_dark.png',\n+    profile: isLightTheme ? '/ai-estimate/profile.png' : '/ai-estimate/profile_dark.png',\n+  };\n+\n+  const handleBack = () => {\n+    router.back();\n+  };\n+\n   return (\n-    <Container>\n-      <Tabs>\n-        <Tab href={`${base}`} $active={pathname === base}>대화</Tab>\n-        <Tab href={`${base}/history`} $active={pathname === `${base}/history`}>히스토리</Tab>\n-        <Tab href={`${base}/settings`} $active={pathname === `${base}/settings`}>설정</Tab>\n-      </Tabs>\n-      {children}\n-    </Container>\n-  )\n+    <LayoutWrapper>\n+      <TopNav>\n+        <div className=\"left-icons\">\n+          <span className=\"icon\" onClick={handleBack}>\n+            <Icon src={icons.back} width={24} height={24} />\n+          </span>\n+        </div>\n+        <div className=\"right-icons\">\n+          <span className=\"icon\"><Icon src={icons.share} width={36} height={36} /></span>\n+          <span className=\"icon\"><Icon src={icons.new} width={36} height={36} /></span>\n+          <span className=\"icon\"><Icon src={icons.estimate} width={36} height={36} /></span>\n+          <span className=\"icon\"><Icon src={icons.profile} width={36} height={36} /></span>\n+        </div>\n+      </TopNav>\n+      \n+      <div style={{ paddingTop: '80px' }}>\n+        {React.Children.map(children, child => {\n+          if (React.isValidElement<ChildWithThemeProps>(child)) {\n+            return React.cloneElement(child, { toggleTheme, themeMode: isDarkMode ? 'dark' : 'light' });\n+          }\n+          return child;\n+        })}\n+      </div>\n+\n+      <ThemeToggleButton onClick={toggleTheme}>\n+        {isDarkMode ? '☀️' : '🌙'}\n+      </ThemeToggleButton>\n+      \n+      <BottomInput \n+        placeholder={inputPlaceholder} \n+        onSubmit={onInputSubmit}\n+      />\n+    </LayoutWrapper>\n+  );\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755244643107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,131 +1,49 @@\n-\"use client\";\n+'use client'\n \n-import React, { ReactNode } from 'react';\n-import styled from 'styled-components';\n-import Icon from '@/components/ai-esti/Icon';\n-import { useRouter } from 'next/navigation';\n-import { useThemeStore } from '@/store/themeStore';\n-import BottomInput from '@/components/ai-esti/BottomInput';\n+import React from 'react'\n+import styled from 'styled-components'\n+import Link from 'next/link'\n+import { usePathname } from 'next/navigation'\n \n-const LayoutWrapper = styled.div`\n+const Container = styled.div`\n   min-height: 100vh;\n-  padding-bottom: calc(76px + env(safe-area-inset-bottom));\n-  background-color: ${({ theme }) => theme.body};\n+  padding: 16px;\n+  background: ${({ theme }) => theme.body};\n `;\n \n-const TopNav = styled.nav`\n-  position: fixed;\n-  top: 0;\n-  left: 0;\n-  right: 0;\n-  height: 80px;\n+const Tabs = styled.nav`\n   display: flex;\n-  justify-content: space-between;\n+  gap: 12px;\n   align-items: center;\n-  padding: 12px 16px;\n-  background-color: ${({ theme }) => theme.body};\n-  border-bottom: 1px solid ${({ theme }) => theme.border};\n-  z-index: 100;\n+  padding: 8px 16px;\n+  border: 1px solid ${({ theme }) => theme.border};\n+  background: ${({ theme }) => theme.surface1};\n+  border-radius: 8px;\n+  margin: 8px auto 12px;\n+  max-width: 960px;\n+`\n \n-  .left-icons, .right-icons {\n-    display: flex;\n-    align-items: center;\n-    gap: 8px;\n-  }\n+const Tab = styled(Link)<{ $active?: boolean }>`\n+  padding: 8px 12px;\n+  border-radius: 6px;\n+  color: ${({ theme, $active }) => ($active ? theme.body : theme.text)};\n+  background: ${({ theme, $active }) => ($active ? theme.accent : 'transparent')};\n+  font-weight: 600;\n+  text-decoration: none;\n+`\n \n-  .icon {\n-    display: flex;\n-    align-items: center;\n-    justify-content: center;\n-    cursor: pointer;\n-    padding: 0;\n-    border-radius: 8px;\n-\n-    &:hover {\n-      background-color: ${({ theme }) => `${theme.body}`};\n-    }\n-  }\n-`;\n-\n-const ThemeToggleButton = styled.button`\n-  position: fixed;\n-  bottom: 120px;\n-  right: 20px;\n-  padding: 10px 15px;\n-  border-radius: 20px;\n-  border: 1px solid ${({ theme }) => theme.border};\n-  background-color: ${({ theme }) => theme.surface1};\n-  color: ${({ theme }) => theme.text};\n-  cursor: pointer;\n-  font-weight: bold;\n-  z-index: 1000;\n+export default function AiLayout({ children }: { children: React.ReactNode }) {\n+  const pathname = usePathname()\n+  const base = '/ai'\n   \n-  &:hover {\n-    opacity: 0.8;\n-  }\n-`;\n-\n-interface AiEstimateLayoutProps {\n-  children: ReactNode;\n-  inputPlaceholder?: string;\n-  onInputSubmit?: (value: string) => void;\n-}\n-\n-interface ChildWithThemeProps {\n-  toggleTheme?: () => void;\n-  themeMode?: 'light' | 'dark';\n-}\n-\n-export default function AiEstimateLayout({ children, inputPlaceholder, onInputSubmit }: AiEstimateLayoutProps) {\n-  const router = useRouter();\n-  const { isDarkMode, toggleTheme } = useThemeStore();\n-\n-  const isLightTheme = !isDarkMode;\n-  const icons = {\n-    back: '/ai-estimate/arrow_back.png',\n-    share: isLightTheme ? '/ai-estimate/share.png' : '/ai-estimate/share_dark.png',\n-    new: isLightTheme ? '/ai-estimate/new.png' : '/ai-estimate/new_dark.png',\n-    estimate: isLightTheme ? '/ai-estimate/esti.png' : '/ai-estimate/esti_dark.png',\n-    profile: isLightTheme ? '/ai-estimate/profile.png' : '/ai-estimate/profile_dark.png',\n-  };\n-\n-  const handleBack = () => {\n-    router.back();\n-  };\n-\n   return (\n-    <LayoutWrapper>\n-      <TopNav>\n-        <div className=\"left-icons\">\n-          <span className=\"icon\" onClick={handleBack}>\n-            <Icon src={icons.back} width={24} height={24} />\n-          </span>\n-        </div>\n-        <div className=\"right-icons\">\n-          <span className=\"icon\"><Icon src={icons.share} width={36} height={36} /></span>\n-          <span className=\"icon\"><Icon src={icons.new} width={36} height={36} /></span>\n-          <span className=\"icon\"><Icon src={icons.estimate} width={36} height={36} /></span>\n-          <span className=\"icon\"><Icon src={icons.profile} width={36} height={36} /></span>\n-        </div>\n-      </TopNav>\n-      \n-      <div style={{ paddingTop: '80px' }}>\n-        {React.Children.map(children, child => {\n-          if (React.isValidElement<ChildWithThemeProps>(child)) {\n-            return React.cloneElement(child, { toggleTheme, themeMode: isDarkMode ? 'dark' : 'light' });\n-          }\n-          return child;\n-        })}\n-      </div>\n-\n-      <ThemeToggleButton onClick={toggleTheme}>\n-        {isDarkMode ? '☀️' : '🌙'}\n-      </ThemeToggleButton>\n-      \n-      <BottomInput \n-        placeholder={inputPlaceholder} \n-        onSubmit={onInputSubmit}\n-      />\n-    </LayoutWrapper>\n-  );\n+    <Container>\n+      <Tabs>\n+        <Tab href={`${base}`} $active={pathname === base}>대화</Tab>\n+        <Tab href={`${base}/history`} $active={pathname === `${base}/history`}>히스토리</Tab>\n+        <Tab href={`${base}/settings`} $active={pathname === `${base}/settings`}>설정</Tab>\n+      </Tabs>\n+      {children}\n+    </Container>\n+  )\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755244711058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,49 +1,126 @@\n-'use client'\n+\"use client\";\n \n-import React from 'react'\n-import styled from 'styled-components'\n-import Link from 'next/link'\n-import { usePathname } from 'next/navigation'\n+import React, { ReactNode } from 'react';\n+import styled from 'styled-components';\n+import Icon from '@/components/ai-esti/Icon';\n+import { useRouter } from 'next/navigation';\n+import { useThemeStore } from '@/store/themeStore';\n+import BottomInput from '@/components/ai-esti/BottomInput';\n \n-const Container = styled.div`\n+const LayoutWrapper = styled.div`\n   min-height: 100vh;\n-  padding: 16px;\n-  background: ${({ theme }) => theme.body};\n+  padding-bottom: calc(76px + env(safe-area-inset-bottom));\n+  background-color: ${({ theme }) => theme.body};\n `;\n \n-const Tabs = styled.nav`\n+const TopNav = styled.nav`\n+  position: fixed;\n+  top: 0;\n+  left: 0;\n+  right: 0;\n+  height: 80px;\n   display: flex;\n-  gap: 12px;\n+  justify-content: space-between;\n   align-items: center;\n-  padding: 8px 16px;\n+  padding: 12px 16px;\n+  background-color: ${({ theme }) => theme.body};\n+  border-bottom: 1px solid ${({ theme }) => theme.border};\n+  z-index: 100;\n+\n+  .left-icons, .right-icons {\n+    display: flex;\n+    align-items: center;\n+    gap: 8px;\n+  }\n+\n+  .icon {\n+    display: flex;\n+    align-items: center;\n+    justify-content: center;\n+    cursor: pointer;\n+    padding: 0;\n+    border-radius: 8px;\n+\n+    &:hover {\n+      background-color: ${({ theme }) => `${theme.body}`};\n+    }\n+  }\n+`;\n+\n+const ThemeToggleButton = styled.button`\n+  position: fixed;\n+  bottom: 120px;\n+  right: 20px;\n+  padding: 10px 15px;\n+  border-radius: 20px;\n   border: 1px solid ${({ theme }) => theme.border};\n-  background: ${({ theme }) => theme.surface1};\n-  border-radius: 8px;\n-  margin: 8px auto 12px;\n-  max-width: 960px;\n-`\n+  background-color: ${({ theme }) => theme.surface1};\n+  color: ${({ theme }) => theme.text};\n+  cursor: pointer;\n+  font-weight: bold;\n+  z-index: 1000;\n+  \n+  &:hover {\n+    opacity: 0.8;\n+  }\n+`;\n \n-const Tab = styled(Link)<{ $active?: boolean }>`\n-  padding: 8px 12px;\n-  border-radius: 6px;\n-  color: ${({ theme, $active }) => ($active ? theme.body : theme.text)};\n-  background: ${({ theme, $active }) => ($active ? theme.accent : 'transparent')};\n-  font-weight: 600;\n-  text-decoration: none;\n-`\n+interface AiEstimateLayoutProps {\n+  children: ReactNode;\n+  inputPlaceholder?: string;\n+  onInputSubmit?: (value: string) => void;\n+}\n \n-export default function AiLayout({ children }: { children: React.ReactNode }) {\n-  const pathname = usePathname()\n-  const base = '/ai'\n-  \n+interface ChildWithThemeProps {\n+  toggleTheme?: () => void;\n+  themeMode?: 'light' | 'dark';\n+}\n+\n+export default function AiEstimateLayout({ children, inputPlaceholder, onInputSubmit }: AiEstimateLayoutProps) {\n+  const router = useRouter();\n+  const { isDarkMode, toggleTheme } = useThemeStore();\n+\n+  const isLightTheme = !isDarkMode;\n+  const icons = {\n+    back: '/ai-estimate/arrow_back.png',\n+    share: isLightTheme ? '/ai-estimate/share.png' : '/ai-estimate/share_dark.png',\n+    new: isLightTheme ? '/ai-estimate/new.png' : '/ai-estimate/new_dark.png',\n+    estimate: isLightTheme ? '/ai-estimate/esti.png' : '/ai-estimate/esti_dark.png',\n+    profile: isLightTheme ? '/ai-estimate/profile.png' : '/ai-estimate/profile_dark.png',\n+  };\n+\n+  const handleBack = () => {\n+    router.back();\n+  };\n+\n   return (\n-    <Container>\n-      <Tabs>\n-        <Tab href={`${base}`} $active={pathname === base}>대화</Tab>\n-        <Tab href={`${base}/history`} $active={pathname === `${base}/history`}>히스토리</Tab>\n-        <Tab href={`${base}/settings`} $active={pathname === `${base}/settings`}>설정</Tab>\n-      </Tabs>\n-      {children}\n-    </Container>\n+    <LayoutWrapper>\n+      <TopNav>\n+        <div className=\"left-icons\">\n+          <span className=\"icon\" onClick={handleBack}>\n+            <Icon src={icons.back} width={24} height={24} />\n+          </span>\n+        </div>\n+        <div className=\"right-icons\">\n+          <span className=\"icon\"><Icon src={icons.share} width={36} height={36} /></span>\n+          <span className=\"icon\"><Icon src={icons.new} width={36} height={36} /></span>\n+          <span className=\"icon\"><Icon src={icons.estimate} width={36} height={36} /></span>\n+          <span className=\"icon\"><Icon src={icons.profile} width={36} height={36} /></span>\n+        </div>\n+      </TopNav>\n+      \n+      <div style={{ paddingTop: '80px' }}>\n+        {React.Children.map(children, child => {\n+          if (React.isValidElement<ChildWithThemeProps>(child)) {\n+            return React.cloneElement(child, { toggleTheme, themeMode: isDarkMode ? 'dark' : 'light' });\n+          }\n+          return child;\n+        })}\n+      </div>\n+\n+      <ThemeToggleButton onClick={toggleTheme}>\n+        {isDarkMode ? '☀️' : '🌙'}\n+      </ThemeToggleButton>\n+      \n   )\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755244728887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -120,7 +120,8 @@\n \n       <ThemeToggleButton onClick={toggleTheme}>\n         {isDarkMode ? '☀️' : '🌙'}\n       </ThemeToggleButton>\n-      \n+      </LayoutWrapper>\n+\n   )\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1755244296426,
            "name": "Commit-0",
            "content": "'use client'\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport Link from 'next/link'\nimport { usePathname } from 'next/navigation'\n\nconst Container = styled.div`\n  min-height: 100vh;\n  padding: 16px;\n  background: ${({ theme }) => theme.body};\n`;\n\nconst Tabs = styled.nav`\n  display: flex;\n  gap: 12px;\n  align-items: center;\n  padding: 8px 16px;\n  border: 1px solid ${({ theme }) => theme.border};\n  background: ${({ theme }) => theme.surface1};\n  border-radius: 8px;\n  margin: 8px auto 12px;\n  max-width: 960px;\n`\n\nconst Tab = styled(Link)<{ $active?: boolean }>`\n  padding: 8px 12px;\n  border-radius: 6px;\n  color: ${({ theme, $active }) => ($active ? theme.body : theme.text)};\n  background: ${({ theme, $active }) => ($active ? theme.accent : 'transparent')};\n  font-weight: 600;\n  text-decoration: none;\n`\n\nexport default function AiLayout({ children }: { children: React.ReactNode }) {\n  const pathname = usePathname()\n  const base = '/ai'\n  \n  return (\n    <Container>\n      <Tabs>\n        <Tab href={`${base}`} $active={pathname === base}>대화</Tab>\n        <Tab href={`${base}/history`} $active={pathname === `${base}/history`}>히스토리</Tab>\n        <Tab href={`${base}/settings`} $active={pathname === `${base}/settings`}>설정</Tab>\n      </Tabs>\n      {children}\n    </Container>\n  )\n}"
        }
    ]
}