{
    "sourceFile": "src/app/ai-estimate/layout.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1755244296426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1755244296426,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport React, { ReactNode } from 'react';\nimport styled from 'styled-components';\nimport Icon from '@/components/ai-esti/Icon';\nimport { useRouter } from 'next/navigation';\nimport { useThemeStore } from '@/store/themeStore';\nimport BottomInput from '@/components/ai-esti/BottomInput';\n\nconst LayoutWrapper = styled.div`\n  min-height: 100vh;\n  padding-bottom: calc(76px + env(safe-area-inset-bottom));\n  background-color: ${({ theme }) => theme.body};\n`;\n\nconst TopNav = styled.nav`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 80px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 16px;\n  background-color: ${({ theme }) => theme.body};\n  border-bottom: 1px solid ${({ theme }) => theme.border};\n  z-index: 100;\n\n  .left-icons, .right-icons {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n  }\n\n  .icon {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    padding: 0;\n    border-radius: 8px;\n\n    &:hover {\n      background-color: ${({ theme }) => `${theme.body}`};\n    }\n  }\n`;\n\nconst ThemeToggleButton = styled.button`\n  position: fixed;\n  bottom: 120px;\n  right: 20px;\n  padding: 10px 15px;\n  border-radius: 20px;\n  border: 1px solid ${({ theme }) => theme.border};\n  background-color: ${({ theme }) => theme.surface1};\n  color: ${({ theme }) => theme.text};\n  cursor: pointer;\n  font-weight: bold;\n  z-index: 1000;\n  \n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\ninterface AiEstimateLayoutProps {\n  children: ReactNode;\n  inputPlaceholder?: string;\n  onInputSubmit?: (value: string) => void;\n}\n\ninterface ChildWithThemeProps {\n  toggleTheme?: () => void;\n  themeMode?: 'light' | 'dark';\n}\n\nexport default function AiEstimateLayout({ children, inputPlaceholder, onInputSubmit }: AiEstimateLayoutProps) {\n  const router = useRouter();\n  const { isDarkMode, toggleTheme } = useThemeStore();\n\n  const isLightTheme = !isDarkMode;\n  const icons = {\n    back: '/ai-estimate/arrow_back.png',\n    share: isLightTheme ? '/ai-estimate/share.png' : '/ai-estimate/share_dark.png',\n    new: isLightTheme ? '/ai-estimate/new.png' : '/ai-estimate/new_dark.png',\n    estimate: isLightTheme ? '/ai-estimate/esti.png' : '/ai-estimate/esti_dark.png',\n    profile: isLightTheme ? '/ai-estimate/profile.png' : '/ai-estimate/profile_dark.png',\n  };\n\n  const handleBack = () => {\n    router.back();\n  };\n\n  return (\n    <LayoutWrapper>\n      <TopNav>\n        <div className=\"left-icons\">\n          <span className=\"icon\" onClick={handleBack}>\n            <Icon src={icons.back} width={24} height={24} />\n          </span>\n        </div>\n        <div className=\"right-icons\">\n          <span className=\"icon\"><Icon src={icons.share} width={36} height={36} /></span>\n          <span className=\"icon\"><Icon src={icons.new} width={36} height={36} /></span>\n          <span className=\"icon\"><Icon src={icons.estimate} width={36} height={36} /></span>\n          <span className=\"icon\"><Icon src={icons.profile} width={36} height={36} /></span>\n        </div>\n      </TopNav>\n      \n      <div style={{ paddingTop: '80px' }}>\n        {React.Children.map(children, child => {\n          if (React.isValidElement<ChildWithThemeProps>(child)) {\n            return React.cloneElement(child, { toggleTheme, themeMode: isDarkMode ? 'dark' : 'light' });\n          }\n          return child;\n        })}\n      </div>\n\n      <ThemeToggleButton onClick={toggleTheme}>\n        {isDarkMode ? '☀️' : '🌙'}\n      </ThemeToggleButton>\n      \n      <BottomInput \n        placeholder={inputPlaceholder} \n        onSubmit={onInputSubmit}\n      />\n    </LayoutWrapper>\n  );\n}"
        }
    ]
}