{
    "sourceFile": "src/app/ai-estimate/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1754639843873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754639863109,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,9 +121,12 @@\n           <>\n             <TopSection>\n               <MainContent>\n                 <EstimateCard estimate={projectEstimate} />\n-                \n+                <DetailsToggle onClick={() => setIsDetailsVisible(!isDetailsVisible)}>\n+                  상세견적 보기 {isDetailsVisible ? <DetailsToggleIcon><IoChevronUp size={24}/></DetailsToggleIcon> : <DetailsToggleIcon><IoChevronDown size={24}/></DetailsToggleIcon>\n+                }\n+                </DetailsToggle>\n                 <PeriodSlider value={projectPeriod} onChange={setProjectPeriod} />\n \n                 <AnimatedContainer $isvisible={isDetailsVisible}>\n                   <EstimateAccordion data={projectEstimate} onItemClick={handleItemClick} />\n"
                },
                {
                    "date": 1754640120584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,8 +82,40 @@\n     top: 120px;\n   }\n `;\n \n+// 추가: 라이브 섹션\n+const LiveSection = styled.section`\n+  margin-top: 32px;\n+`;\n+\n+const LiveTitle = styled.h3`\n+  font-size: 16px;\n+  font-weight: 600;\n+  color: ${({ theme }) => theme.text};\n+  margin-bottom: 12px;\n+`;\n+\n+const VideoWrapper = styled.div`\n+  position: relative;\n+  width: 100%;\n+  max-width: 960px;\n+  margin: 0 auto;\n+  aspect-ratio: 16 / 9;\n+  border-radius: 12px;\n+  overflow: hidden;\n+  border: 1px solid ${({ theme }) => theme.border};\n+  background: #000;\n+\n+  iframe {\n+    position: absolute;\n+    inset: 0;\n+    width: 100%;\n+    height: 100%;\n+    border: 0;\n+  }\n+`;\n+\n import { EstimateItem } from './types';\n \n interface AiEstimatePageProps {\n   toggleTheme?: () => void;\n@@ -130,8 +162,22 @@\n \n                 <AnimatedContainer $isvisible={isDetailsVisible}>\n                   <EstimateAccordion data={projectEstimate} onItemClick={handleItemClick} />\n                 </AnimatedContainer>\n+\n+                {/* 유튜브 라이브 섹션 */}\n+                <LiveSection>\n+                  <LiveTitle>실시간 라이브</LiveTitle>\n+                  <VideoWrapper>\n+                    <iframe\n+                      src=\"https://www.youtube.com/embed/GhleiSfZCOM?rel=0&modestbranding=1&playsinline=1&autoplay=0&mute=0\"\n+                      title=\"YouTube live\"\n+                      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n+                      referrerPolicy=\"strict-origin-when-cross-origin\"\n+                      allowFullScreen\n+                    />\n+                  </VideoWrapper>\n+                </LiveSection>\n               </MainContent>\n               <SideContent>\n                 <EstimateActionButtons \n                   onConsult={() => console.log('문의하기')}\n"
                },
                {
                    "date": 1754640233141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,40 +82,9 @@\n     top: 120px;\n   }\n `;\n \n-// 추가: 라이브 섹션\n-const LiveSection = styled.section`\n-  margin-top: 32px;\n-`;\n \n-const LiveTitle = styled.h3`\n-  font-size: 16px;\n-  font-weight: 600;\n-  color: ${({ theme }) => theme.text};\n-  margin-bottom: 12px;\n-`;\n-\n-const VideoWrapper = styled.div`\n-  position: relative;\n-  width: 100%;\n-  max-width: 960px;\n-  margin: 0 auto;\n-  aspect-ratio: 16 / 9;\n-  border-radius: 12px;\n-  overflow: hidden;\n-  border: 1px solid ${({ theme }) => theme.border};\n-  background: #000;\n-\n-  iframe {\n-    position: absolute;\n-    inset: 0;\n-    width: 100%;\n-    height: 100%;\n-    border: 0;\n-  }\n-`;\n-\n import { EstimateItem } from './types';\n \n interface AiEstimatePageProps {\n   toggleTheme?: () => void;\n"
                },
                {
                    "date": 1754640260892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -132,21 +132,9 @@\n                 <AnimatedContainer $isvisible={isDetailsVisible}>\n                   <EstimateAccordion data={projectEstimate} onItemClick={handleItemClick} />\n                 </AnimatedContainer>\n \n-                {/* 유튜브 라이브 섹션 */}\n-                <LiveSection>\n-                  <LiveTitle>실시간 라이브</LiveTitle>\n-                  <VideoWrapper>\n-                    <iframe\n-                      src=\"https://www.youtube.com/embed/GhleiSfZCOM?rel=0&modestbranding=1&playsinline=1&autoplay=0&mute=0\"\n-                      title=\"YouTube live\"\n-                      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n-                      referrerPolicy=\"strict-origin-when-cross-origin\"\n-                      allowFullScreen\n-                    />\n-                  </VideoWrapper>\n-                </LiveSection>\n+               \n               </MainContent>\n               <SideContent>\n                 <EstimateActionButtons \n                   onConsult={() => console.log('문의하기')}\n"
                }
            ],
            "date": 1754639843873,
            "name": "Commit-0",
            "content": "// src/app/ai-estimate/page.tsx\n\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { IoChevronDown, IoChevronUp } from 'react-icons/io5';\nimport { useEstimateStore } from '@/store/estimateStore';\nimport { mockEstimateData } from './mockData';\nimport AiConsultantHeader from '@/components/ai-esti/AiConsultantHeader';\nimport EstimateCard from '@/components/ai-esti/EstimateCard';\nimport PeriodSlider from '@/components/ai-esti/PeriodSlider';\nimport EstimateAccordion from '@/components/ai-esti/EstimateAccordion';\nimport DetailModal from '@/components/ai-esti/DetailModal';\nimport EstimateActionButtons from '@/components/ai-esti/EstimateActionButtons';\n\nconst PageWrapper = styled.div`\n  background-color: ${({ theme }) => theme.body};\n  max-width: 1200px;\n  margin: 0px auto;\n  padding: 12px 20px;\n`;\n\nconst AnimatedContainer = styled.div<{ $isvisible: boolean }>`\n  display: grid;\n  grid-template-rows: ${({ $isvisible }) => ($isvisible ? '1fr' : '0fr')};\n  transition: grid-template-rows 0.5s ease-in-out;\n  overflow: hidden;\n\n  > * {\n    min-height: 0;\n  }\n`;\n\nconst DetailsToggle = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  padding: 10px;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 160%; \n  letter-spacing: 0.28px;\n  color: ${({ theme }) => theme.subtleText};\n  cursor: pointer;\n  margin: -20px 0 20px;\n`;\n\nconst DetailsToggleIcon = styled.div`\n  margin-top: 4px;\n  margin-left: 10px;\n`;\n\nconst TopSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  @media (min-width: 1024px) {\n    flex-direction: row;\n    align-items: flex-start;\n    gap: 24px;\n  }\n`;\n\nconst MainContent = styled.div`\n  flex: 1;\n  width: 100%;\n\n  @media (min-width: 1024px) {\n    max-width: 800px;\n  }\n`;\n\nconst SideContent = styled.div`\n  width: 100%;\n\n  @media (min-width: 1024px) {\n    width: 320px;\n    position: sticky;\n    top: 120px;\n  }\n`;\n\nimport { EstimateItem } from './types';\n\ninterface AiEstimatePageProps {\n  toggleTheme?: () => void;\n  themeMode?: 'light' | 'dark';\n}\n\nconst AiEstimatePage: React.FC<AiEstimatePageProps> = () => {\n  const [isDetailsVisible, setIsDetailsVisible] = useState(false);\n  const [selectedItem, setSelectedItem] = useState<EstimateItem | null>(null);\n\n  const { \n    projectEstimate, \n    projectPeriod, \n    setProjectEstimate, \n    setProjectPeriod \n  } = useEstimateStore();\n\n  useEffect(() => {\n    setProjectEstimate(mockEstimateData);\n  }, [setProjectEstimate]);\n\n  const handleItemClick = (item: EstimateItem) => {\n    setSelectedItem(item);\n  };\n\n  const handleCloseModal = () => {\n    setSelectedItem(null);\n  };\n\n  return (\n      <PageWrapper>\n        <AiConsultantHeader />\n        \n        {projectEstimate && (\n          <>\n            <TopSection>\n              <MainContent>\n                <EstimateCard estimate={projectEstimate} />\n                \n                <PeriodSlider value={projectPeriod} onChange={setProjectPeriod} />\n\n                <AnimatedContainer $isvisible={isDetailsVisible}>\n                  <EstimateAccordion data={projectEstimate} onItemClick={handleItemClick} />\n                </AnimatedContainer>\n              </MainContent>\n              <SideContent>\n                <EstimateActionButtons \n                  onConsult={() => console.log('문의하기')}\n                  onAiEstimate={() => console.log('AI 예산 줄이기')}\n                  onAiOptimize={() => console.log('AI 맞춤 추천')}\n                />\n              </SideContent>\n            </TopSection>\n          </>\n        )}\n      \n      {selectedItem && <DetailModal item={selectedItem} onClose={handleCloseModal} />}\n      </PageWrapper>\n  );\n};\n\nexport default AiEstimatePage;\n"
        }
    ]
}