{
    "sourceFile": "src/app/layout.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1755075000521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755075024830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,10 @@\n import styled from \"styled-components\";\n import { ToastProvider } from \"@/components/common/ToastProvider\";\n import { PageLoaderProvider } from \"@/contexts/PageLoaderContext\";\n import { useSearchParams, usePathname } from \"next/navigation\";\n+import { GlobalWrapper } from \"./global-wrapper\";\n+\n import React from \"react\";\n \n const inter = Inter({ subsets: [\"latin\"] });\n \n"
                },
                {
                    "date": 1755075034498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,8 @@\n     <html lang=\"ko\">\n       <body className={inter.className}>\n         <StyledComponentsRegistry>\n         <GlobalWrapper>\n-\n           <ThemeProvider theme={theme}>\n             <GlobalStyle />\n             <PageLoaderProvider>\n               <ToastProvider>\n@@ -65,8 +64,9 @@\n                 {!isCms && <Footer compact={compact} />}\n               </ToastProvider>\n             </PageLoaderProvider>\n           </ThemeProvider>\n+          </GlobalWrapper>\n         </StyledComponentsRegistry>\n       </body>\n     </html>\n   );\n"
                }
            ],
            "date": 1755075000521,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport StyledComponentsRegistry from \"@/lib/registry\";\nimport { Inter } from \"next/font/google\";\nimport { ThemeProvider } from \"styled-components\";\nimport { useThemeStore } from \"@/store/themeStore\";\nimport { lightTheme, darkTheme } from \"@/styles/theme\";\nimport { GlobalStyle } from \"@/styles/globalStyles\";\nimport Header from \"@/components/common/Header\";\nimport Footer from \"@/components/common/Footer\";\nimport styled from \"styled-components\";\nimport { ToastProvider } from \"@/components/common/ToastProvider\";\nimport { PageLoaderProvider } from \"@/contexts/PageLoaderContext\";\nimport { useSearchParams, usePathname } from \"next/navigation\";\nimport React from \"react\";\n\nconst inter = Inter({ subsets: [\"latin\"] });\n\n// isCms 값에 따라 스타일을 동적으로 적용하도록 수정\nconst Main = styled.main`\n\n  ${({ $isCms }) =>\n    $isCms\n      ? `\n      padding: 0;\n      min-height: auto;\n      background-color: #E6E7E9;\n    `\n      : `\n      padding: 76px 0 84px;\n      min-height: 100vh;\n    `}\n`;\n\nexport default function RootLayout({ children }: { children: React.ReactNode }) {\n  const { isDarkMode } = useThemeStore();\n  const params = useSearchParams();\n  const pathname = usePathname();\n  const [compact, setCompact] = React.useState(false);\n  const [mounted, setMounted] = React.useState(false);\n\n  React.useEffect(() => {\n    setMounted(true);\n    setCompact(params.get(\"embed\") === \"1\");\n  }, [params]);\n\n  const theme = mounted ? (isDarkMode ? darkTheme : lightTheme) : lightTheme;\n\n  const isCms = pathname?.startsWith(\"/cms\");\n\n  return (\n    <html lang=\"ko\">\n      <body className={inter.className}>\n        <StyledComponentsRegistry>\n        <GlobalWrapper>\n\n          <ThemeProvider theme={theme}>\n            <GlobalStyle />\n            <PageLoaderProvider>\n              <ToastProvider>\n                {!isCms && <Header compact={compact} />}\n                <Main $isCms={isCms}>{children}</Main>\n                {!isCms && <Footer compact={compact} />}\n              </ToastProvider>\n            </PageLoaderProvider>\n          </ThemeProvider>\n        </StyledComponentsRegistry>\n      </body>\n    </html>\n  );\n}"
        }
    ]
}